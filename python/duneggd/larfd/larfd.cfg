

#[PixelPlane] 
#class = duneggd.larfd.PixelPlane.PixelPlaneBuilder
#pixRes = Q('2.5mm')
#pixBoardDeadSpace = 0.5*pixRes
#pixelDim = [Q('0.5mm'), pixRes, pixRes] 
#nPixelsPerBoard = 6 # assume square, same number in each direction
#pixBoardDim = [ pixelDim[0], nPixelsPerBoard*pixelDim[1]+2*pixBoardDeadSpace, nPixelsPerBoard*pixelDim[2]+2*pixBoardDeadSpace]

[TPCPlaneZ]
class = duneggd.larfd.TPCPlane.TPCPlaneBuilder
WirePitch     = Q('0.479cm')
WireAngle     = Q('0deg')
nWires        = 400
nowires       = False
wireDiam      = Q('150um')
G10Thickness  =  Q('0.125in')
wrapCover     =  Q('0.0625in')
apaFrameDim   = [Q('5.0661cm'), Q('606.0cm'), Q('231.59cm')]
view          = 'Z'


[TPCPlaneV]
class = duneggd.larfd.TPCPlane.TPCPlaneBuilder
WirePitch     = Q('0.4667cm')
WireAngle     = Q('35.710deg')
nWires        = 10
nowires       = {TPCPlaneZ:nowires}
wireDiam      = {TPCPlaneZ:wireDiam} 
G10Thickness  = {TPCPlaneZ:G10Thickness}
wrapCover     = {TPCPlaneZ:wrapCover}
apaFrameDim   = {TPCPlaneZ:apaFrameDim}
view          = 'V'


[TPCPlaneU]
class = duneggd.larfd.TPCPlane.TPCPlaneBuilder
WirePitch     = Q('0.4667cm')
WireAngle     = Q('35.710deg')
nWires        = 10
nowires       = {TPCPlaneZ:nowires}
wireDiam      = {TPCPlaneZ:wireDiam} 
G10Thickness  = {TPCPlaneZ:G10Thickness}
wrapCover     = {TPCPlaneZ:wrapCover}
apaFrameDim   = {TPCPlaneZ:apaFrameDim}
view          = 'U'


[TPC]
subbuilders    = ['TPCPlaneZ', 'TPCPlaneV', 'TPCPlaneU']
class          = duneggd.larfd.TPC.TPCBuilder
driftDistance  = Q('3.6m')
wirePlanePitch = Q('0.476cm')
APAGap_y       =  Q('0.4cm')
APAGap_z       =  Q('0.8cm')
tpcDim         = [ driftDistance + 2*wirePlanePitch + 0.5*{TPCPlaneZ:wireDiam},
	       	   {TPCPlaneZ:apaFrameDim}[1]+APAGap_y, {TPCPlaneZ:apaFrameDim}[2]+APAGap_z ]



[Cryostat]
subbuilders         = ['TPC']
class               = duneggd.larfd.Cryostat.CryostatBuilder
membraneThickness   = Q('0.5in')
cathodeThickness    = Q('0.016cm')
nAPAs               = [1, 2, 6]


[DetEnclosureLAr]
subbuilders = ['Cryostat']
class = duneggd.larfd.DetEncLAr.DetEncLArBuilder
detEncDim = [Q('59ft'),Q('50.4ft'),Q('98.53125ft')] 
encBoundToDet_z = Q('25ft') # placeholder
   # -z bound of enclosure to -z face of detector



[World]
subbuilders = ['DetEnclosureLAr']
class = duneggd.larfd.World.WorldBuilder
worldMat = 'Rock'
worldDim = [Q('200m'),Q('200m'),Q('200m')] # enough room for CRY, otherwise arbitrary
encBackWallToHall_z = Q('46.25ft') 
   # -z bound of enclosure to -z face of secondary hall


# ~^~^~^~^~^~ SOURCES ~^~^~^~^~^~

# World and DetEnclosure parameters from last 10 pages of 
# NDCF drawings, at LBNE DocDB 10831-v4.

